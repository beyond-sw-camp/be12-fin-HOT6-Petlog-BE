spring:
  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${DB_ID}
    password: ${DB_PASSWORD}
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${AWS_REGION} # AWS_REGION 환경 변수 사용
      s3:
        bucket: ${S3_BUCKET_NAME}
  sql:
    init:
      mode: always

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: none
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_ADDR}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          timeout: 5000

jwt:
  secret: ${JWT_SECRET}
  expired: ${JWT_EXPIRED}

project:
  upload:
    path: C:/Users/Playdata/Desktop/pdh

logging:
  level:
    org.hibernate.SQL: debug         # 실제 SQL 출력
    org.hibernate.type.descriptor.sql.BasicBinder: trace  # ? 파라미터 값 출력

openai:
  api:
    key: ${OPENAI_API_KEY}